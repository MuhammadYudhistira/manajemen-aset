generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SEKWAN
  KEPALA_BAGIAN
  STAFF
  GUEST
}

enum Jenis_Aset {
  Peralatan
  Kendaraan
}

enum Status_Aset {
  Available
  Inactive
  Damaged
  Under_Maintenance
  Request_Deletion
  Deletion_Accepted
}

enum Status_laporan {
  Reported
  Approved
  Rejected
}

enum Status_perbaikan {
  Reported
  Approved
  Rejected
  In_progress
  Completed
}

enum Status_pengajuan {
  Pending
  Approved
  Rejected
  Cancelled
  Completed
}

enum Jenis_Kelamin {
  Pria
  Wanita
}

model User {
  nip               String              @id @db.VarChar(18)
  nama              String              @db.VarChar(100)
  password          String
  image             String?
  jenis_kelamin     Jenis_Kelamin
  alamat            String?
  no_hp             String?             @db.VarChar(18)
  role              Role                @default(GUEST)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  Laporan_Kerusakan Laporan_Kerusakan[]
  Perbaikan         Perbaikan[]
  Detail_Pengadaan  Detail_Pengadaan[]
  Pengajuan         Pengajuan[]

  @@map("users")
}

model Lokasi {
  id               Int                @id @default(autoincrement())
  nama_lokasi      String             @db.VarChar(100)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Detail_Pengadaan Detail_Pengadaan[]

  @@map("lokasi")
}

model Barang {
  kode_barang      String             @id @db.VarChar(20)
  nama_barang      String             @unique @db.VarChar(100)
  jenis_barang     Jenis_Aset         @default(Peralatan)
  image            String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Detail_Pengadaan Detail_Pengadaan[]
  Detail_Pengajuan Detail_Pengajuan[]

  @@map("barang")
}

model Pengajuan {
  no_pengajuan      String             @id @db.VarChar(30)
  nip_pengusul      String             @db.VarChar(18)
  title             String
  unit_pengajuan    String
  tanggal_pengajuan DateTime
  status            Status_pengajuan   @default(Pending)
  keterangan        String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  user              User               @relation(fields: [nip_pengusul], references: [nip], onDelete: Cascade, onUpdate: Cascade)
  Detail_Pengajuan  Detail_Pengajuan[]
  Pengadaan         Pengadaan[]

  @@map("pengajuan")
}

model Detail_Pengajuan {
  id            String    @id
  no_pengajuan  String    @db.VarChar(30)
  kode_barang   String    @db.VarChar(20)
  jumlah_barang Int
  Pengajuan     Pengajuan @relation(references: [no_pengajuan], fields: [no_pengajuan], onDelete: Cascade, onUpdate: Cascade)
  Barang        Barang    @relation(references: [kode_barang], fields: [kode_barang], onDelete: Cascade, onUpdate: Cascade)

  @@unique([no_pengajuan, kode_barang])
  @@map("detail_pengajuan")
}

model Pengadaan {
  nomor_pengadaan    String             @id @db.VarChar(30)
  no_pengajuan       String             @db.VarChar(30)
  nama_vendor        String
  tanggal_penerimaan DateTime
  dokumen_pengadaan  String?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  Pengajuan          Pengajuan          @relation(references: [no_pengajuan], fields: [no_pengajuan], onDelete: Cascade, onUpdate: Cascade)
  Detail_Pengadaan   Detail_Pengadaan[]

  @@map("pengadaan")
}

model Detail_Pengadaan {
  id                            String                          @id
  kode_barang                   String                          @db.VarChar(20)
  nomor_pengadaan               String                          @db.VarChar(30)
  id_lokasi                     Int
  nip_penanggung_jawab          String                          @db.VarChar(18)
  kode_aset                     String
  harga_satuan                  Int
  merk                          String?                         @db.VarChar(50)
  ukuran                        String?                         @db.VarChar(50)
  umur_ekonomis                 Int
  status                        Status_Aset                     @default(Available)
  keterangan                    String?
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  barang                        Barang                          @relation(references: [kode_barang], fields: [kode_barang], onDelete: Cascade, onUpdate: Cascade)
  pengadaan                     Pengadaan                       @relation(references: [nomor_pengadaan], fields: [nomor_pengadaan], onDelete: Cascade, onUpdate: Cascade)
  lokasi                        Lokasi                          @relation(references: [id], fields: [id_lokasi])
  user                          User                            @relation(references: [nip], fields: [nip_penanggung_jawab])
  Aset_Kendaraan                Aset_Kendaraan?
  Detail_Aset_Images            Detail_Aset_Images[]
  Laporan_Kerusakan             Laporan_Kerusakan[]
  Detail_Penghapusan_Nilai_Aset Detail_Penghapusan_Nilai_Aset[]

  @@map("detail_pengadaan")
}

model Aset_Kendaraan {
  kode_detail      String           @unique
  nomor_rangka     String?          @db.VarChar(100)
  nomor_mesin      String?          @db.VarChar(100)
  nomor_polisi     String?          @db.VarChar(100)
  nomor_bpkb       String?          @db.VarChar(100)
  detail_pengadaan Detail_Pengadaan @relation(fields: [kode_detail], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Detail_Aset_Images {
  id               Int              @id @default(autoincrement())
  link             String
  kode_detail      String
  detail_pengadaan Detail_Pengadaan @relation(fields: [kode_detail], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  @@map("detail_aset_images")
}

model Laporan_Kerusakan {
  id               String           @id @default(uuid())
  id_user          String
  kode_detail      String
  perihal          String
  deskripsi        String           @db.LongText
  image            String
  approved_by      String?          @db.VarChar(100)
  approved_date    DateTime?
  status           Status_laporan   @default(Reported)
  keterangan       String?          @db.LongText
  user             User             @relation(fields: [id_user], references: [nip], onDelete: Cascade, onUpdate: Cascade)
  detail_pengadaan Detail_Pengadaan @relation(fields: [kode_detail], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  Perbaikan        Perbaikan?

  @@map("laporan_kerusakan")
}

model Perbaikan {
  id                String             @id
  id_requested_by   String
  hal               String             @db.LongText
  biaya_perbaikan   Int
  nomor_rekening    String             @db.VarChar(100)
  approved_by       String?            @db.VarChar(100)
  approved_date     DateTime?
  faktur            String?
  kuitansi          String?
  berita_acara      String?
  status            Status_perbaikan   @default(Reported)
  keterangan        String?            @db.LongText
  laporan_kerusakan Laporan_Kerusakan  @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Perbaikan_Images  Perbaikan_Images[]
  user              User               @relation(fields: [id_requested_by], references: [nip])
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  @@map("perbaikan")
}

model Perbaikan_Images {
  id           String    @id @default(uuid())
  link         String
  perbaikan    Perbaikan @relation(fields: [id_perbaikan], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_perbaikan String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("perbaikan_images")
}

model Penghapusan_Nilai_aset {
  no_penghapusan                String                          @id
  title                         String                          @db.VarChar(200)
  alasan_penghapusan            String                          @db.LongText
  status                        Status_Pengajuan_Penghapusan    @default(Pending)
  keterangan                    String?                         @db.LongText
  bukti_penghapusan             String?
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  Detail_Penghapusan_Nilai_Aset Detail_Penghapusan_Nilai_Aset[]

  @@map("penghapusan_nilai_aset")
}

enum Status_Pengajuan_Penghapusan {
  Pending
  Accepted
  Rejected
}

enum Status_Penghapusan {
  Pending
  Accepted
  Rejected
}

model Detail_Penghapusan_Nilai_Aset {
  id                    String                 @id @default(uuid())
  no_penghapusan        String
  kode_detail           String
  pengajuan_penghapusan Penghapusan_Nilai_aset @relation(fields: [no_penghapusan], references: [no_penghapusan], onDelete: Cascade, onUpdate: Cascade)
  detail_pengadaan      Detail_Pengadaan       @relation(fields: [kode_detail], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt

  @@unique([no_penghapusan, kode_detail])
  @@map("detail_penghapusan_nilai_aset")
}
